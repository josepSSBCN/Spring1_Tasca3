package IOPackage;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

import ExcepcionsPackage.NoExisteixFitxer;
import PersonaPackage.Persona;

public class GestioCSV {
	// ATRIBUTS
	private ArrayList<Persona> persones;

	// CONSTRUCTORA
	public GestioCSV() {
		persones = new ArrayList<Persona>();
	}

	// GETTERS & SETTERS
	public ArrayList<Persona> getPersones() {
		return persones;
	}

	// METODES
	public boolean LlegirCSV() throws IOException {
		// DEFINICIO VARIABLES
		boolean resultat = false;
		Persona persona;
		String[] words;
		File myFile;
		Scanner myScanner = null;

		// ACCIONS
		// 1) Es crea
		myFile = new File("src/persones.csv");

		// 2) Es comprova si existeix el fitxer
		if (myFile.exists()) {
			
			// 3) Es llegeix tot el fitxer
			myScanner = new Scanner(myFile);

			// 4) Es llegeix una per una les files
			while (myScanner.hasNext()) {
				words = myScanner.nextLine().split(";");
				// 5) Es llegeixen les paraules de la línia
				if (words.length == 3) {
					persona = new Persona(words[0], words[1], words[2]);
					this.persones.add(persona);
				}
			}
		}		

		// SORTIDA
		return resultat;

	}

	public void EscriureCSV(Persona persona) throws IOException {
		// DEFINICIO VARIABLES
		File myFile;
		FileWriter myFileWrite;

		// ACCIONS
		// 1) Es crea l'objecte file
		myFile = new File("src/persones.csv");

		// 2) S'ha de crear el fitxer?
		if (!myFile.exists()) {
			myFile.createNewFile();
		}

		// 3) Es crea l'objecte x escriure en el fitxer
		myFileWrite = new FileWriter(myFile, true);

		// 4) S'afegeix la nova línia
		myFileWrite.write(String.format("%s;%s;%s\r\n", persona.getNom(), persona.getCognom(), persona.getDni()));

		// 5) Es tanca el fitxer
		myFileWrite.close();

		// SORTIDA

	}
}
